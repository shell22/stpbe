package com.zhuanjingkj.stpbe.platform.mapper;

import com.zhuanjingkj.stpbe.platform.domain.ImgVaHptz;
import com.zhuanjingkj.stpbe.platform.domain.ImgVaHptzExample;
import java.util.List;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

@Repository
public interface ImgVaHptzMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_img_va_hptz
     *
     * @mbg.generated Tue Nov 17 19:02:08 CST 2020
     */
    long countByExample(ImgVaHptzExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_img_va_hptz
     *
     * @mbg.generated Tue Nov 17 19:02:08 CST 2020
     */
    int deleteByExample(ImgVaHptzExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_img_va_hptz
     *
     * @mbg.generated Tue Nov 17 19:02:08 CST 2020
     */
    int deleteByPrimaryKey(Long imageVaId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_img_va_hptz
     *
     * @mbg.generated Tue Nov 17 19:02:08 CST 2020
     */
    int insert(ImgVaHptz record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_img_va_hptz
     *
     * @mbg.generated Tue Nov 17 19:02:08 CST 2020
     */
    int insertSelective(ImgVaHptz record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_img_va_hptz
     *
     * @mbg.generated Tue Nov 17 19:02:08 CST 2020
     */
    List<ImgVaHptz> selectByExampleWithBLOBs(ImgVaHptzExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_img_va_hptz
     *
     * @mbg.generated Tue Nov 17 19:02:08 CST 2020
     */
    List<ImgVaHptz> selectByExample(ImgVaHptzExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_img_va_hptz
     *
     * @mbg.generated Tue Nov 17 19:02:08 CST 2020
     */
    ImgVaHptz selectByPrimaryKey(Long imageVaId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_img_va_hptz
     *
     * @mbg.generated Tue Nov 17 19:02:08 CST 2020
     */
    int updateByExampleSelective(@Param("record") ImgVaHptz record, @Param("example") ImgVaHptzExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_img_va_hptz
     *
     * @mbg.generated Tue Nov 17 19:02:08 CST 2020
     */
    int updateByExampleWithBLOBs(@Param("record") ImgVaHptz record, @Param("example") ImgVaHptzExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_img_va_hptz
     *
     * @mbg.generated Tue Nov 17 19:02:08 CST 2020
     */
    int updateByExample(@Param("record") ImgVaHptz record, @Param("example") ImgVaHptzExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_img_va_hptz
     *
     * @mbg.generated Tue Nov 17 19:02:08 CST 2020
     */
    int updateByPrimaryKeySelective(ImgVaHptz record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_img_va_hptz
     *
     * @mbg.generated Tue Nov 17 19:02:08 CST 2020
     */
    int updateByPrimaryKeyWithBLOBs(ImgVaHptz record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_img_va_hptz
     *
     * @mbg.generated Tue Nov 17 19:02:08 CST 2020
     */
    int updateByPrimaryKey(ImgVaHptz record);

    /**
     * 查询某个时间段车流量
     * @param maxTime 时间段上线
     * @param minTime 时间段下线
     * @return
     */
    int countByTime(@Param("maxTime")String maxTime,@Param("minTime")String minTime);
}